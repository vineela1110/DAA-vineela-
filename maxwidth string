#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void printJustifiedText(char **words, int wordsSize, int maxWidth) {
    int i = 0;
    while (i < wordsSize) {
        int j = i, len = 0;
        while (j < wordsSize && len + strlen(words[j]) + j - i <= maxWidth) {
            len += strlen(words[j]);
            j++;
        }
        
        int spaces = maxWidth - len;
        int slots = j - i - 1;
        
        if (j == wordsSize || slots == 0) {
            for (int k = i; k < j; k++) {
                printf("%s", words[k]);
                if (k < j - 1) printf(" ");
            }
            for (int k = 0; k < spaces - slots; k++) {
                printf(" ");
            }
        } else {
            int spacePerSlot = spaces / slots;
            int extraSpaces = spaces % slots;
            for (int k = i; k < j; k++) {
                printf("%s", words[k]);
                if (k < j - 1) {
                    for (int l = 0; l <= spacePerSlot + (k - i < extraSpaces ? 1 : 0); l++) {
                        printf(" ");
                    }
                }
            }
        }
        printf("\n");
        i = j;
    }
}

int main() {
    char *words[] = {"This", "is", "an", "example", "of", "text", "justification."};
    int maxWidth = 16;
    int wordsSize = sizeof(words) / sizeof(words[0]);
    
    printJustifiedText(words, wordsSize, maxWidth);
    
    return 0;
}
OUTPUT:
This     is     an
example   of  text
justification.  
