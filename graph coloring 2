def graph_coloring(edges, n, k):
    graph = [[] for _ in range(n)]
    for u, v in edges:
        graph[u].append(v)
        graph[v].append(u)

    colors = [-1] * n
    max_regions = 0

    def is_safe(v, c):
        for i in graph[v]:
            if colors[i] == c:
                return False
        return True

    def greedy_coloring(v, turn):
        nonlocal max_regions
        if turn == 0:
            max_regions += 1
        for c in range(k):
            if is_safe(v, c):
                colors[v] = c
                return True
        return False

    for turn in range(3):
        for v in range(n):
            if colors[v] == -1 and greedy_coloring(v, turn):
                continue
            else:
                return -1  # No valid coloring possible

    return max_regions

edges = [(0, 1), (1, 2), (2, 3), (3, 0), (0, 2)]
n = 4
k = 3
print(graph_coloring(edges, n, k))  
OUTPUT:
2
