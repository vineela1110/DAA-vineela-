#include <stdio.h>
#include <math.h>
#include<float.h>
typedef struct {
    float x, y;
} Point;
float distance(Point p1, Point p2) {
    return sqrtf(powf(p1.x - p2.x, 2) + powf(p1.y - p2.y, 2));
}
void closestPair(Point points[], int n) {
    float minDist = FLT_MAX;
    int minIndex1 = -1, minIndex2 = -1;
    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            float dist = distance(points[i], points[j]);
            if (dist < minDist) {
                minDist = dist;
                minIndex1 = i;
                minIndex2 = j;
            }
        }
    }
    printf("Closest pair: (%f, %f) and (%f, %f) with distance %.2f\n",
           points[minIndex1].x, points[minIndex1].y,
           points[minIndex2].x, points[minIndex2].y,
           minDist);
}
int main() {
    Point points[] = {{10, 0}, {11, 5}, {5, 3}, {9, 3.5}, {15, 3}, {12.5, 7}, {6, 6.5}, {7.5, 4.5}};
    int n = sizeof(points) / sizeof(points[0]);
    closestPair(points, n);
    return 0;
}
OUTPUT:
Closest pair: (9.000000, 3.500000) and (7.500000, 4.500000) with distance 1.80
