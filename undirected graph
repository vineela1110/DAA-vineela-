#include <stdio.h>
#include <stdbool.h>
#define MAX_NODES 100
int dfs(int graph[][MAX_NODES], int node, int cat, int turn, int visited[][MAX_NODES], int memo[][MAX_NODES][2]) {
    if (node == 0) return 1; 
    if (node == cat) return 2; 
    if (visited[node][turn]) return 0;
    visited[node][turn] = 1;
    int res = 2; 
    for (int i = 0; graph[node][i] != -1; i++) {
        int next_node = graph[node][i];
        if (next_node == cat) continue; 
        if (memo[next_node][cat][1-turn] != -1) {
            res = memo[next_node][cat][1-turn];
        } else {
            res = dfs(graph, next_node, cat, 1-turn, visited, memo);
            memo[next_node][cat][1-turn] = res;
        }
        if (res == 1) break; 
    }
    return res;
}
int catMouseGame(int graph[][MAX_NODES], int graphSize) {
    int visited[MAX_NODES][2] = {{0}};
    int memo[MAX_NODES][MAX_NODES][2] = {{{-1}}};
    return dfs(graph, 1, 2, 0, visited, memo);
}
int main() {
    int graph1[][MAX_NODES] = {{2,5,-1},{3,-1},{0,4,5,-1},{1,4,5,-1},{2,3,-1},{0,2,3,-1}};
    int graph2[][MAX_NODES] = {{1,3,-1},{0,-1},{3,-1},{0,2,-1}};
    printf("Example 1: %d\n", catMouseGame(graph1, 6));
    printf("Example 2: %d\n", catMouseGame(graph2, 4));
    return 0;
}
OUTPUT:
0
